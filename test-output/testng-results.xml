<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="6" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-09-17T08:23:00 EDT" name="Suite" finished-at="2024-09-17T08:23:56 EDT" duration-ms="56459">
    <groups>
    </groups>
    <test started-at="2024-09-17T08:23:00 EDT" name="TestSuite" finished-at="2024-09-17T08:23:56 EDT" duration-ms="56459">
      <class name="automationproject.testcases.E2ETest1">
        <test-method is-config="true" signature="launchApp()[pri:0, instance:automationproject.testcases.E2ETest1@503f91c3]" started-at="2024-09-17T08:23:00 EDT" name="launchApp" finished-at="2024-09-17T08:23:05 EDT" duration-ms="4510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="purchasingProduct(java.util.HashMap)[pri:0, instance:automationproject.testcases.E2ETest1@503f91c3]" started-at="2024-09-17T08:23:05 EDT" name="purchasingProduct" data-provider="getData" finished-at="2024-09-17T08:23:10 EDT" duration-ms="5014" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{firstname=saravana, password=Qaz@1020, product=ZARA COAT 3, occupation=Engineer, mobile=1213456780, confirmpassword=Qaz@1020, email=saravanakumar@gmail.com, lastname=kumar}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- purchasingProduct -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automationproject.testcases.E2ETest1@503f91c3]" started-at="2024-09-17T08:23:10 EDT" name="tearDown" finished-at="2024-09-17T08:23:10 EDT" duration-ms="213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:automationproject.testcases.E2ETest1@503f91c3]" started-at="2024-09-17T08:23:10 EDT" name="launchApp" finished-at="2024-09-17T08:23:14 EDT" duration-ms="4524" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="purchasingProduct(java.util.HashMap)[pri:0, instance:automationproject.testcases.E2ETest1@503f91c3]" started-at="2024-09-17T08:23:14 EDT" name="purchasingProduct" data-provider="getData" finished-at="2024-09-17T08:23:19 EDT" duration-ms="4892" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{firstname=john, password=Pwd@1234, product=ADIDAS ORIGINAL, occupation=Doctor, mobile=9876543210, confirmpassword=Pwd@1234, email=john.doe@example.com, lastname=doe}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- purchasingProduct -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automationproject.testcases.E2ETest1@503f91c3]" started-at="2024-09-17T08:23:19 EDT" name="tearDown" finished-at="2024-09-17T08:23:19 EDT" duration-ms="180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:automationproject.testcases.E2ETest1@503f91c3]" started-at="2024-09-17T08:23:19 EDT" name="launchApp" finished-at="2024-09-17T08:23:24 EDT" duration-ms="4904" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="orderHistory(java.util.HashMap)[pri:0, instance:automationproject.testcases.E2ETest1@503f91c3]" started-at="2024-09-17T08:23:24 EDT" name="orderHistory" data-provider="getData" finished-at="2024-09-17T08:23:25 EDT" depends-on-methods="automationproject.testcases.E2ETest1.purchasingProduct" duration-ms="1080" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{firstname=saravana, password=Qaz@1020, product=ZARA COAT 3, occupation=Engineer, mobile=1213456780, confirmpassword=Qaz@1020, email=saravanakumar@gmail.com, lastname=kumar}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderHistory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automationproject.testcases.E2ETest1@503f91c3]" started-at="2024-09-17T08:23:25 EDT" name="tearDown" finished-at="2024-09-17T08:23:27 EDT" duration-ms="1924" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:automationproject.testcases.E2ETest1@503f91c3]" started-at="2024-09-17T08:23:27 EDT" name="launchApp" finished-at="2024-09-17T08:23:32 EDT" duration-ms="4313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="orderHistory(java.util.HashMap)[pri:0, instance:automationproject.testcases.E2ETest1@503f91c3]" started-at="2024-09-17T08:23:32 EDT" name="orderHistory" data-provider="getData" finished-at="2024-09-17T08:23:33 EDT" depends-on-methods="automationproject.testcases.E2ETest1.purchasingProduct" duration-ms="987" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{firstname=john, password=Pwd@1234, product=ADIDAS ORIGINAL, occupation=Doctor, mobile=9876543210, confirmpassword=Pwd@1234, email=john.doe@example.com, lastname=doe}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderHistory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automationproject.testcases.E2ETest1@503f91c3]" started-at="2024-09-17T08:23:33 EDT" name="tearDown" finished-at="2024-09-17T08:23:33 EDT" duration-ms="143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- automationproject.testcases.E2ETest1 -->
      <class name="automationproject.testcases.ErrorValidations">
        <test-method is-config="true" signature="launchApp()[pri:0, instance:automationproject.testcases.ErrorValidations@74287ea3]" started-at="2024-09-17T08:23:33 EDT" name="launchApp" finished-at="2024-09-17T08:23:37 EDT" duration-ms="4775" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="failedTestValidation(java.util.HashMap)[pri:0, instance:automationproject.testcases.ErrorValidations@74287ea3]" started-at="2024-09-17T08:23:37 EDT" name="failedTestValidation" data-provider="getData" finished-at="2024-09-17T08:23:38 EDT" duration-ms="640" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Qaz@1020, email=saravaakumar@gmail.com}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email or passwor]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email or passwor]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at automationproject.testcases.ErrorValidations.failedTestValidation(ErrorValidations.java:28)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failedTestValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automationproject.testcases.ErrorValidations@74287ea3]" started-at="2024-09-17T08:23:38 EDT" name="tearDown" finished-at="2024-09-17T08:23:39 EDT" duration-ms="193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:automationproject.testcases.ErrorValidations@74287ea3]" started-at="2024-09-17T08:23:39 EDT" name="launchApp" finished-at="2024-09-17T08:23:43 EDT" duration-ms="4694" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="failedTestValidation(java.util.HashMap)[pri:0, instance:automationproject.testcases.ErrorValidations@74287ea3]" started-at="2024-09-17T08:23:43 EDT" name="failedTestValidation" data-provider="getData" finished-at="2024-09-17T08:23:45 EDT" duration-ms="1243" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Pwd@1234, email=john.ddoe@example.com}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email or passwor]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email or passwor]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at automationproject.testcases.ErrorValidations.failedTestValidation(ErrorValidations.java:28)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failedTestValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automationproject.testcases.ErrorValidations@74287ea3]" started-at="2024-09-17T08:23:45 EDT" name="tearDown" finished-at="2024-09-17T08:23:45 EDT" duration-ms="160" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:automationproject.testcases.ErrorValidations@74287ea3]" started-at="2024-09-17T08:23:45 EDT" name="launchApp" finished-at="2024-09-17T08:23:49 EDT" duration-ms="3947" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="loginErrorValidation(java.util.HashMap)[pri:0, instance:automationproject.testcases.ErrorValidations@74287ea3]" started-at="2024-09-17T08:23:49 EDT" name="loginErrorValidation" data-provider="getData" finished-at="2024-09-17T08:23:50 EDT" duration-ms="1314" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Qaz@1020, email=saravaakumar@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automationproject.testcases.ErrorValidations@74287ea3]" started-at="2024-09-17T08:23:50 EDT" name="tearDown" finished-at="2024-09-17T08:23:50 EDT" duration-ms="190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:automationproject.testcases.ErrorValidations@74287ea3]" started-at="2024-09-17T08:23:50 EDT" name="launchApp" finished-at="2024-09-17T08:23:56 EDT" duration-ms="5178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="loginErrorValidation(java.util.HashMap)[pri:0, instance:automationproject.testcases.ErrorValidations@74287ea3]" started-at="2024-09-17T08:23:56 EDT" name="loginErrorValidation" data-provider="getData" finished-at="2024-09-17T08:23:56 EDT" duration-ms="620" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Pwd@1234, email=john.ddoe@example.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automationproject.testcases.ErrorValidations@74287ea3]" started-at="2024-09-17T08:23:56 EDT" name="tearDown" finished-at="2024-09-17T08:23:56 EDT" duration-ms="154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- automationproject.testcases.ErrorValidations -->
    </test> <!-- TestSuite -->
  </suite> <!-- Suite -->
</testng-results>
